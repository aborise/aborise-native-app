import { z } from 'zod';

export const userDataSchema = z.object({
  // entitlement: z.object({
  //   addOns: z.array(z.unknown()),
  //   adFree: z.boolean(),
  //   multiPackageTracking: z.string(),
  //   packageCode: z.string(),
  //   packageId: z.object({}),
  //   packageSource: z.string(),
  //   productName: z.string(),
  //   vendorCode: z.string(),
  // }),
  // isLoggedIn: z.boolean(),
  displayName: z.string(),
  // regID: z.number(),
  profile: z.object({
    first_name: z.string(),
    last_name: z.string(),
    email: z.string(),
    connections: z.object({
      facebook: z.boolean(),
      twitter: z.boolean(),
      google: z.boolean(),
    }),
    optIn: z.boolean(),
    profile_type: z.string(),
  }),
  // svod: z.object({
  //   packages: z.array(
  //     z.object({
  //       product_code: z.object({}),
  //       product_name: z.object({}),
  //       product_tier: z.number(),
  //       code: z.string(),
  //       status: z.string(),
  //       source: z.string(),
  //       holding_state: z.string(),
  //       user_can_edit: z.boolean(),
  //       supported_vendor: z.boolean(),
  //       on_trial: z.boolean(),
  //       plan_type: z.object({}),
  //       plan_tier: z.object({}),
  //       addOns: z.array(z.unknown()),
  //       vendor_code: z.object({}),
  //       no_trial: z.boolean(),
  //       mobile_only: z.boolean(),
  //       subscription_country: z.object({}),
  //     }),
  //   ),
  //   status: z.string(), // status: "EX_SUBSCRIBER"
  //   recurly_package: z.object({}),
  //   user_package: z.object({
  //     product_code: z.object({}),
  //     product_name: z.object({}),
  //     product_tier: z.number(),
  //     code: z.string(),
  //     status: z.string(),
  //     source: z.string(),
  //     holding_state: z.string(),
  //     user_can_edit: z.boolean(),
  //     supported_vendor: z.boolean(),
  //     on_trial: z.boolean(),
  //     plan_type: z.object({}),
  //     plan_tier: z.object({}),
  //     addOns: z.array(z.unknown()),
  //     vendor_code: z.object({}),
  //     no_trial: z.boolean(),
  //     mobile_only: z.boolean(),
  //     subscription_country: z.object({}),
  //   }),
  //   package_status: z.string(),
  //   package_source: z.string(),
  //   package_status_raw: z.string(),
  //   package_code: z.string(),
  //   bundle_status: z.string(),
  //   issues: z.array(z.unknown()),
  //   multi_package_tracking: z.string(),
  // }),
  statusCode: z.string(), // statusCode: "exsub"
  isSubscriber: z.boolean(),
  // isThirdParty: z.boolean(),
  isExSubscriber: z.boolean(),
  // isSuspended: z.boolean(),
  // isGhost: z.boolean(),
  // isMVPDAuthZ: z.boolean(),
  // isMVPDAuthZExSub: z.boolean(),
  // isActive: z.boolean(),
  // isPartnerSubscription: z.boolean(),
  // isReseller: z.boolean(),
  // isRecurly: z.boolean(),
  // isLC: z.boolean(),
  // isCF: z.boolean(),
  // isCompUser: z.boolean(),
  // isRegistered: z.boolean(),
  // isOptimum: z.boolean(),
  // isUnsupportedVendor: z.boolean(),
  // isMonthlyPlan: z.boolean(),
  // isAnnualPlan: z.boolean(),
  // canEdit: z.boolean(),
  // provideNativeDeviceSubSettingsLink: z.boolean(),
  // needsUpdate: z.boolean(),
  // edu: z.object({
  //   profile: z.object({}),
  //   coupon: z.object({}),
  // }),
  // isMVPD: z.boolean(),
  // userRegistrationCountry: z.string(),
  // isUserRegionOnSunset: z.boolean(),
  // tags: z.object({
  //   bundleStatus: z.string(),
  //   packageSource: z.string(),
  //   packageStatus: z.string(),
  //   multiPackageTracking: z.string(),
  //   userStatus: z.string(),
  //   userType: z.string(),
  //   vendorCode: z.string(),
  //   userId: z.number(),
  //   userRegId: z.number(),
  //   referenceProfileId: z.number(),
  //   userProfileCategory: z.string(),
  //   userProfileId: z.number(),
  //   userProfileMaster: z.string(),
  //   userProfilePic: z.string(),
  //   userProfilePicPath: z.string(),
  // }),
  // mvpdDispute: z.object({
  //   isDmaInDispute: z.boolean(),
  //   mvpdProvider: z.string(),
  // }),
});

export type UserData = z.infer<typeof userDataSchema>;
